plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.haru'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springAiVersion', "1.0.0")
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'org.springframework.ai:spring-ai-pdf-document-reader'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.amqp:spring-rabbit-stream'
	compileOnly 'org.projectlombok:lombok'

	// mysql jdbc
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

	// h2 database for test
	testImplementation 'com.h2database:h2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// scheduled
	implementation 'org.springframework:spring-context-support'

	// S3
	implementation platform('software.amazon.awssdk:bom:2.25.33')
	implementation 'software.amazon.awssdk:s3'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// GSON
	implementation 'com.google.code.gson:gson:2.11.0'

	// JSON
	implementation("org.json:json:20240303")

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// http
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	implementation("com.squareup.okhttp3:okhttp:4.12.0")

	// vad
	implementation("com.orctom:vad4j:1.0")

	// webflux
	implementation("org.springframework.boot:spring-boot-starter-webflux:3.4.5")

	// hash
	implementation 'org.hashids:hashids:1.0.3'

	// apache
	implementation 'org.apache.pdfbox:pdfbox:2.0.27'

	// docx4j
	implementation 'org.docx4j:docx4j-JAXB-ReferenceImpl:8.3.3'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'org.docx4j:docx4j-export-fo:8.3.3'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
